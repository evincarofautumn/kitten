[1, 2] -> vec;
vec unsafeHead sayInt
vec tail sayInts
vec unsafeLast sayInt
vec init sayInts

1 vector sayInts

[1] [2] cat sayInts
[1, 2, 3] [4, 5, 6] cat sayInts

1 -> x;
2 -> y;
3 -> z;
[x, y, z] sayInts

def a (->) {}

def b (->) {}

[\a, \b] length sayInt

def f (int int -> int): (+)

[1 + 2, 3 * 4, 5 6 f] sayInts

[1, 0, 3](1 @= 2) sayInts

([0] <> [1] <> [2]) sayInts
