def ↔ (a b → b a):
  swap

1 2 ↔ − sayInt

def latter (α β → β):
  swap drop

3 4 latter sayInt

// In reality, former.
def latter' (γ δ → γ):
  drop

5 6 latter' sayInt

// With a real prime.
def latter′ (ε ζ → ζ):
  latter

7 8 latter′ sayInt

type Π (Int, Int)
(9, 10) to Π from Π first sayInt

true ¬ sayBool
