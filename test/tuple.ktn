(0, 0.0, false, "zero", ()) -> q

q first sayInt
q second sayFloat
q third sayBool
q fourth say

(0, 1) -> p
p first sayInt
p rest sayInt

(q, p) -> compound

compound first fourth say

(1,) 1 = sayBool

1 2 pair first 1 = sayBool
1 2 pair rest 2 = sayBool

(1 2 *, "three" "four" cat) -> p
p first sayInt
p rest say
