// Safely gets a value from an option value.
def fromOption (a? a -> a):
  -> { m z }
  option m:
    id
  else:
    z

// Unsafely gets the value from an option.
def fromSome (a? -> a):
  __from_some

// Whether an option is empty.
def isNone (a? -> Bool):
  option id:
    drop false
  else:
    true

// Whether an option contains a value.
def isSome (a? -> Bool):
  option id:
    drop true
  else:
    false

// Maps a function over an option value.
def liftOption (a? (a -> b +e) -> b? +e):
  -> f
  option id:
    f@ some
  else:
    none

// Combines two option values with a function.
def liftOption2 (a? b? (a b -> c +e) -> c? +e):
  -> { mx my f }
  option mx: -> x
    option my: -> y
      x y f@ some
    else: none
  else: none

// Constructs an empty option.
def none (-> a?):
  __none

// Constructs an option with a value.
def some (a -> a?):
  __some
