// Range of integers from start to finish generating
// based on a given next and compare functions
def rangeFor (int int (int -> int) (int int -> bool) -> [int]):
  -> start end next cmp;
  if (start end cmp apply):
    []
  else:
    start next apply
      end next cmp rangeFor
    start prepend

// Inclusive range
def rangeTo (int int -> [int]):
  -> start end;
  if (start < end):
    start end {(+ 1)} \> rangeFor
  else:
    start end {(- 1)} \< rangeFor

// Non-inclusive range
def rangeUntil (int int -> [int]):
  -> start end;
  if (start < end):
    start end {(+ 1)} \>= rangeFor
  else:
    start end {(- 1)} \<= rangeFor

// Inclusive range (shorthand)
def .. (int int -> [int]) { rangeTo }

// Non-inclusive range (shorthand)
def ... (int int -> [int]) { rangeUntil }
