// Character equality.
define eqChar (char char -> bool):
  \charToInt toBoth (=)

// String equality.
define eqString ([char] [char] -> bool):
  \eqChar eqVector

// Character greater than or equal.
define geChar (char char -> bool):
  \charToInt toBoth (>=)

// Character greater than.
define gtChar (char char -> bool):
  \charToInt toBoth (>)

// Character less than or equal.
define leChar (char char -> bool):
  \charToInt toBoth (<=)

// Character less than.
define ltChar (char char -> bool):
  \charToInt toBoth (<)

// Character inequality.
define neChar (char char -> bool):
  \charToInt toBoth (!=)

// Shows a Boolean as a string.
define showBool (bool -> [char]):
  {"true"} {"false"} if__else_

// Shows a Boolean vector as a string.
define showBools ([bool] -> [char]):
  \showBool showVector

// Shows a string vector as a string.
define showStrings ([[char]] -> [char]):
  {} showVector

// Shows a floating-point number as a string.
define showFloat (float -> [char]):
  __show_float

// Shows a floating-point vector as a string.
define showFloats ([float] -> [char]):
  \showFloat showVector

// Shows an integer as a string.
define showInt (int -> [char]):
  __show_int

// Shows an integer vector as a string.
define showInts ([int] -> [char]):
  \showInt showVector

// Shows a vector as a string.
define showVector @a ([a] (a -> [char]) -> [char]):
  -> v f;
  [
    "[",
    (v f map) ", " join,
    "]",
  ] concat
