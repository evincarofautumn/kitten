// Character equality.
def eqChar (Char Char -> Bool):
  {charToInt} toBoth =

// String equality.
def eqString ([Char] [Char] -> Bool):
  {eqChar} eqVector

// Character greater than or equal.
def geChar (Char Char -> Bool):
  {charToInt} toBoth >=

// Character greater than.
def gtChar (Char Char -> Bool):
  {charToInt} toBoth >

// Character less than or equal.
def leChar (Char Char -> Bool):
  {charToInt} toBoth <=

// Character less than.
def ltChar (Char Char -> Bool):
  {charToInt} toBoth <

// Character inequality.
def neChar (Char Char -> Bool):
  {charToInt} toBoth !=

// Shows a Boolean as a string.
def showBool (Bool -> [Char]):
  {"true"} {"false"} if_else

// Shows a Boolean vector as a string.
def showBools ([Bool] -> [Char]):
  {showBool} showVector

// Shows a string vector as a string.
def showStrings ([[Char]] -> [Char]):
  {} showVector

// Shows a floating-point number as a string.
def showFloat (Float -> [Char]):
  __show_float

// Shows a floating-point vector as a string.
def showFloats ([Float] -> [Char]):
  {showFloat} showVector

// Shows an integer as a string.
def showInt (Int -> [Char]):
  __show_int

// Shows an integer vector as a string.
def showInts ([Int] -> [Char]):
  {showInt} showVector

// Shows a vector as a string.
def showVector ([a] (a -> [Char]) -> [Char]):
  -> { v f }
  [
    "[",
    (v f map) ", " join,
    "]",
  ] concat
